// Code generated by protoc-gen-grpc-gateway-client. DO NOT EDIT.
// source: helloworld.proto

package example

import (
	context "context"
	gateway "github.com/cloudfly/go-grpc-gateway-client/pkg/gateway"
)

// GreeterGatewayClient is the interface for Greeter service client.
type GreeterGatewayClient interface {
	// Sends a greeting
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
}

func NewGreeterGatewayClient(ctx context.Context, baseUrl string, opts ...gateway.ClientOption) GreeterGatewayClient {
	c := gateway.NewClient(ctx, baseUrl, opts...)
	return &greeterGatewayClient{
		gwc: c,
	}
}

type greeterGatewayClient struct {
	gwc *gateway.Client
}

func (c *greeterGatewayClient) SayHello(ctx context.Context, req *HelloRequest) (*HelloReply, error) {
	gwReq, err := c.gwc.NewRequest(ctx, "GET", "/v1/example/echo")
	if err != nil {
		return nil, fmt.Errorf("new request error: %w", err)
	}
	return gateway.DoHTTPRequest[HelloReply](ctx, c.gwc, gwReq)
}
